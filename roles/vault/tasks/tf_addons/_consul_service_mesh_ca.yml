---
- name: "[LOCAL] Render {{ _current_conf_addon }} addon"    # noqa risky-file-permissions name[template]
  copy:
    src: "{{ role_path }}/files/{{ _current_conf_addon }}/"
    dest: "{{ hs_vault_terraform_work_dir }}/vault_addon_{{ _current_conf_addon }}/"
  delegate_to: localhost
  become: false
  when:
    - __hs_vault_is_first_master

- name: "[LOCAL] Render backend tf file"
  template:
    src: "tf_backend_{{ hs_vault_terraform_backend_type }}.tf.j2"
    dest: "{{ hs_vault_terraform_work_dir }}/vault_addon_{{ _current_conf_addon }}/backend.tf"
    mode: 0644
  delegate_to: localhost
  become: false
  when:
    - __hs_vault_is_first_master
    - hs_vault_terraform_backend_type is defined
    - (hs_vault_terraform_backend_type | length) > 0
    - hs_vault_terraform_backend_type in ['s3']

- name: "[LOCAL] Apply {{ _current_conf_addon }} addon"  # noqa name[template]
  community.general.terraform:
    project_path: "{{ hs_vault_terraform_work_dir }}/vault_addon_{{ _current_conf_addon }}"
    state: "present"    # noqa args
    force_init: true
    backend_config: "{{ hs_vault_terraform_backend_config }}"
    init_reconfigure: true
    provider_upgrade: "{{ hs_tf_provider_upgrade | default(true) }}"
    workspace: "{{ hs_vault_cluster_name }}"
    variables:
      root_pki_issuing_server: "{{ hs_vault_external_url }}"
      root_pki_crl_distribution_point: "{{ hs_vault_external_url }}"
      intermediate_pki_issuing_server: "{{ hs_vault_external_url }}"
      intermediate_pki_crl_distribution_point: "{{ hs_vault_external_url }}"
  environment:
    VAULT_ADDR: "{{ hs_vault_external_url }}"
    VAULT_TOKEN: "{{ vault_init_content.root_token }}"
    VAULT_CACERT: "{{ hs_vault_use_custom_ca | ternary(hs_vault_local_ca_cert, '') }}"
    TF_CLI_ARGS: ""
    TF_CLI_ARGS_init: ""
    TF_CLI_ARGS_plan: ""
    TF_CLI_ARGS_apply: ""
    TF_CLI_ARGS_destroy: ""
  register: tf_result
  throttle: 1
  delegate_to: localhost
  become: false
  when:
    - __hs_vault_is_first_master

- name: "[LOCAL] Render {{ _current_conf_addon }} addon outputs"  # noqa name[template]
  copy:
    dest: "{{ hs_vault_local_secret_dir }}/vault_addon_{{ _current_conf_addon }}.yml"
    content: |-
      ---
      {{
        {
          'hs_consul_connect_token': tf_result.outputs.consul_service_mesh_token.value,
          'hs_consul_connect_root_pki_path': tf_result.outputs.root_pki_path.value,
          'hs_consul_connect_intermediate_pki_path': tf_result.outputs.inter_pki_path.value,
          'hs_consul_connect_root_pki_certificate_b64': (
            tf_result.outputs.consul_service_mesh_root_ca_certificate.value
            | b64encode
          )
        } | to_nice_yaml(indent=2)
      }}
    mode: 0600
  delegate_to: localhost
  become: false
  when:
    - __hs_vault_is_first_master
